name: Publish Kubernetes Agent chart

on:
  push:
    branches:
    - main
    paths:
    - charts/kubernetes-agent/**
    - .github/workflows/kubernetes-agent-publish-chart.yaml

  pull_request:
    branches:
    - '*'
    paths:
    - charts/kubernetes-agent/**
    - .github/workflows/kubernetes-agent-publish-chart.yaml


jobs:
  version_and_package:
    runs-on: ubuntu-latest
    outputs:
      CHART_VERSION: ${{ steps.version.outputs.CHART_VERSION  }}
      PACKAGE_NAME: ${{ steps.version.outputs.PACKAGE_NAME }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.13.2'

    - name: Parse Chart config
      uses: pietrobolcato/action-read-yaml@1.1.0
      id: read_chart_yaml
      with:
        config: ${{ github.workspace }}/charts/kubernetes-agent/Chart.yaml

    - name: Get branch names
      id: branch_names
      uses: OctopusDeploy/util-actions/current-branch-name@current-branch-name.0.1.0

    - name: Generate chart version
      id: version
      shell: bash
      run: |
        chart_version="${{ steps.read_chart_yaml.outputs.version }}"
        pre_release=""

        if [[ "${{steps.branch_names.outputs.branch_name}}" != "main" ]]
        then
            pre_release="-${{steps.branch_names.outputs.branch_name}}-$(date +'%Y%m%d%H%M%S')"
        fi

        full_version="$chart_version$pre_release"

        echo "CHART_VERSION=$full_version" >> $GITHUB_ENV
        echo "PACKAGE_NAME=kubernetes-agent-$full_version.tgz" >> $GITHUB_OUTPUT

    - name: Package Chart
      run: helm package './charts/kubernetes-agent' --version '${{ env.CHART_VERSION }}'

    - uses: actions/upload-artifact@v3
      name: Upload packaged chart
      with:
        name: '${{ steps.version.outputs.PACKAGE_NAME }}'
        path: '${{ github.workspace }}/kubernetes-agent-${{ env.CHART_VERSION }}.tgz'

  publish_artifactory:
    runs-on: ubuntu-latest
    # We publish to Artifactory if this is not a main commit, or if it is, that it's a versioning commit
    if: ${{ github.ref != 'refs/heads/main' || (github.ref == 'refs/heads/main' && startsWith(github.event.commits[0].message, 'Version Kubernetes Agent Chart')) }}
    needs: version_and_package
    steps:
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.13.2'

    - name: Download packaged chart
      uses: actions/download-artifact@v3
      with:
        name: '${{ needs.version_and_package.outputs.PACKAGE_NAME }}'

    - name: Login to Artifactory
      run: echo '${{ secrets.ARTIFACTORY_PASSWORD }}' | helm registry login ${{ secrets.ARTIFACTORY_DOCKER_REPO_HOSTNAME }} -u '${{ secrets.ARTIFACTORY_USERNAME }}' --password-stdin

    - name: Push Chart to Artifactory
      run: helm push '${{ needs.version_and_package.outputs.PACKAGE_NAME }}' oci://${{ secrets.ARTIFACTORY_DOCKER_REPO_HOSTNAME }}

  publish_dockerhub:
    runs-on: ubuntu-latest
    # We only publish to docker hub if this is commit to main and the comment is a chart versioning commit
    if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.commits[0].message, 'Version Kubernetes Agent Chart') }}
    needs: version_and_package
    steps:
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.13.2'

    - name: Download packaged chart
      uses: actions/download-artifact@v3
      with:
        name: '${{ needs.version_and_package.outputs.PACKAGE_NAME }}'

    - name: Login to DockerHub
      run: echo '${{ secrets.DOCKERHUB_TOKEN }}' | helm registry login registry-1.docker.io -u '${{ secrets.DOCKERHUB_USERNAME }}' --password-stdin

    - name: Push Chart to DockerHub
      run: helm push '${{ needs.version_and_package.outputs.PACKAGE_NAME }}' oci://registry-1.docker.io/octopusdeploy

