suite: statefulset 
templates:
  - statefulset.yaml

tests:
  - it: statefulset should render
    values: 
      - ./values/required.yaml
    asserts:
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - hasDocuments:
          count: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "Y"
        documentIndex: 0
  
  - it: tolerances are configurable
    values: 
      - ./values/tolerations.yaml
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content: 
            key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
        documentIndex: 0

  - it: resources are configurable
    values: 
      - ./values/required.yaml
      - ./values/resources.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value: 
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        documentIndex: 0

  - it: acceptEula converts true to Y 
    values: 
      - ./values/required.yaml
    set:
      octopus.acceptEula: true 
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "Y"
        documentIndex: 0

  - it: acceptEula passes N through 
    values: 
      - ./values/required.yaml
    set:
      octopus.acceptEula: "N"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "N"
        documentIndex: 0
  
  - it: proxy is configurable
    values:
      - ./values/required.yaml
      - ./values/proxy.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'HTTP_PROXY')].value
          value: http://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'HTTPS_PROXY')].value
          value: https://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'ALL_PROXY')].value
          value: https://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'NO_PROXY')].value
          value: example.com,example2.com
        documentIndex: 0

  - it: affinity is correctly set
    set:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: example-key
                    operator: In
                    values:
                      - val1
    asserts:
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions
          content:
            key: "example-key"
            operator: "In"
            values:
              - "val1"
        documentIndex: 0

  - it: podTopologyConstraints is correctly set
    set:
      octopus:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: octopus-server
    asserts:
      - equal:
          path: spec.template.spec.topologySpreadConstraints[0].labelSelector.matchLabels
          value:
            app.kubernetes.io/component: octopus-server