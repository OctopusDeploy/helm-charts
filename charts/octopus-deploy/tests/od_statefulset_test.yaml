suite: statefulset 
templates:
  - statefulset.yaml

tests:
  - it: statefulset should render
    values: 
      - ./values/required.yaml
    asserts:
      - isKind:
          of: StatefulSet
        documentIndex: 0
      - hasDocuments:
          count: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "Y"
        documentIndex: 0
  
  - it: tolerances are configurable
    values: 
      - ./values/tolerations.yaml
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content: 
            key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
        documentIndex: 0

  - it: resources are configurable
    values: 
      - ./values/required.yaml
      - ./values/resources.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources
          value: 
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        documentIndex: 0

  - it: acceptEula converts true to Y 
    values: 
      - ./values/required.yaml
    set:
      octopus.acceptEula: true 
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "Y"
        documentIndex: 0

  - it: acceptEula passes N through 
    values: 
      - ./values/required.yaml
    set:
      octopus.acceptEula: "N"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content: 
            name: "ACCEPT_EULA"
            value: "N"
        documentIndex: 0
  
  - it: proxy is configurable
    values:
      - ./values/required.yaml
      - ./values/proxy.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'HTTP_PROXY')].value
          value: http://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'HTTPS_PROXY')].value
          value: https://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'ALL_PROXY')].value
          value: https://myproxy.com
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'NO_PROXY')].value
          value: example.com,example2.com
        documentIndex: 0

  - it: affinity is correctly set
    set:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: example-key
                    operator: In
                    values:
                      - val1
    asserts:
      - contains:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions
          content:
            key: "example-key"
            operator: "In"
            values:
              - "val1"
        documentIndex: 0

  - it: podTopologyConstraints is correctly set
    set:
      octopus:
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: zone
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: octopus-server
    asserts:
      - equal:
          path: spec.template.spec.topologySpreadConstraints[0].labelSelector.matchLabels
          value:
            app.kubernetes.io/component: octopus-server
            
  - it: podSecurityContext is configurable
    values:
      - ./values/required.yaml
      - ./values/security_context.yaml
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 999
            fsGroupChangePolicy: "OnRootMismatch"
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 999
        documentIndex: 0

  - it: containerSecurityContext is configurable
    values:
      - ./values/required.yaml
      - ./values/security_context.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 999
        documentIndex: 0

  - it: serverConfigurationDirectory is configurable
    set:
      octopus:
        serverConfigurationDirectory: /home/octopus/.octopus-nonroot/
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "OCTOPUS_SERVER_CONFIGURATION_DIRECTORY")].value
          value: /home/octopus/.octopus-nonroot/
        documentIndex: 0
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "USER")].value
          value: octopus
        documentIndex: 0

  - it: labels are configurable
    values:
      - ./values/required.yaml
    set:
        octopus:
            pods:
              labels:
                  podtest: test1
                  podtest2: test2
            statefulSet:
                labels:
                    ststest: test1
                    ststest2: test2
    asserts:
      - equal:
          path: spec.template.metadata.labels.podtest
          value: test1
      - equal:
          path: spec.template.metadata.labels.podtest2
          value: test2
      - equal:
          path: metadata.labels.ststest
          value: test1
      - equal:
          path: metadata.labels.ststest2
          value: test2

  - it: annotations are configurable
    values:
      - ./values/required.yaml
    set:
      octopus:
        pods:
          annotations:
            example.com/podannotation1: test1
            example.com/podannotation2: test2
        statefulSet:
          annotations:
            example.com/stsannotation1: test1
            example.com/stsannotation2: test2
    asserts:
      - equal:
          path: spec.template.metadata.annotations["example.com/podannotation1"]
          value: test1
      - equal:
          path: spec.template.metadata.annotations["example.com/podannotation2"]
          value: test2
      - equal:
          path: metadata.annotations["example.com/stsannotation1"]
          value: test1
      - equal:
          path: metadata.annotations["example.com/stsannotation2"]
          value: test2
  - it: extraEnv is configurable
    values:
      - ./values/required.yaml
    set:
      octopus:
        extraEnv:
          - name: EXAMPLE_ENV_VAR
            value: example_value
          - name: ANOTHER_ENV_VAR
            valueFrom:
              secretKeyRef:
                name: example-secret
                key: example-key
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'EXAMPLE_ENV_VAR')].value
          value: example_value
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'ANOTHER_ENV_VAR')].valueFrom.secretKeyRef.name
          value: example-secret
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == 'ANOTHER_ENV_VAR')].valueFrom.secretKeyRef.key
          value: example-key