# Default values for kubernetes-agent.

# -- Override the name of the app
nameOverride: ""

# -- custom registry pullSecret<br>
# See https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
# These are used for the tentacle and script pods
imagePullSecrets: []
#   - name: "registry-secret-name"

agent:
  # -- Setting to Y accepts the [Customer Agreement](https://octopus.com/company/legal)
  # @section -- Agent values
  acceptEula: "N"
  # -- The name of the deployment target
  # @section -- Agent values
  targetName: ""
  # -- The URL of the target Octopus Server to register this agent with
  # @section -- Agent values
  serverUrl: ""
  # -- The base64-encoded public key of the self-signed x509 certificate or root CA certificate used by the target Octopus Server. Must be in the PEM/CER format. See [documentation](https://octopus.com/docs/kubernetes/targets/kubernetes-agent#trusting-custominternal-octopus-server-certificates) for more information.
  # @section -- Agent values
  serverCertificate: ""
  # -- The polling communication URL of the target Octopus Server
  # @section -- Agent values
  serverCommsAddress: ""
  # -- The polling communication URLs of the target Octopus Servers when running in High Availability (HA)
  # @section -- Agent values
  serverCommsAddresses: []
  # -- The subscription ID that is used to by the agent to identify itself with Octopus Server
  # @section -- Agent values
  serverSubscriptionId: ""
  # -- A JWT bearer token used to authenticate with the target Octopus Server
  # @section -- Agent values
  bearerToken: ""
  # -- The name of an existing Secret that contains a base64-encoded Octopus Server JWT bearer token. Value must be set in `data.bearer-token` in secret.
  # @section -- Agent values
  bearerTokenSecretName: ""
  # -- An Octopus Server API key used to authenticate with the target Octopus Server
  # @section -- Agent values
  serverApiKey: ""
  # -- The name of an existing Secret that contains a base64-encoded Octopus Server API Key.  Value must be set in `data.api-key` in secret.
  # @section -- Agent values
  serverApiKeySecretName: ""
  # -- The username of the user used to authenticate with the target Octopus Server
  # @section -- Agent values
  username: ""
  # -- The password of the user used to authenticate with the target Octopus Server
  # @section -- Agent values
  password: ""  
  # -- The name of an existing Secret that contains a base64-encoded username and password for an Octopus Server user. Values must be set in `data.username` and `data.password` in secret.
  # @section -- Agent values
  usernamePasswordSecretName: ""
  # -- The Space to register the agent in
  # @section -- Agent values
  space: "Default"
  # -- The target environments to register the agent with
  # @section -- Agent values
  targetEnvironments: []
  # -- The target roles to register the agent with
  # @section -- Agent values
  targetRoles: []
  # -- Can be `Untenanted`, `TenantedOrUntenanted` or `Tenanted`.
  # @section -- Agent values
  targetTenantedDeploymentParticipation: "Untenanted"
  # -- The target tenants to register the agent with
  # @section -- Agent values
  targetTenants: []
  # -- The target tenant tags to register the agent with
  # @section -- Agent values
  targetTenantTags: []
  # -- A base64-encoded x509 certificate used to setup a trust between the agent and target Octopus Server
  # @section -- Agent values
  certificate: ""
  # -- The machine policy to register the agent with
  # @section -- Agent values
  machinePolicyName: ""
  # -- The log level of the agent. Logs are written to the pod logs as well as to file
  # @section -- Agent values
  logLevel: "Info"
  # -- The default Kubernetes namespace for deployments
  # @section -- Agent values
  defaultNamespace: ""
  # -- The number of polling TCP connections to open with the target Octopus Server
  # @section -- Agent values
  pollingConnectionCount: 5

  # -- True if events should be scraped and added to the metrics config map
  # @section -- Agent values
  enableMetricsCapture: true

  # -- The host, port, username and password of the proxy server to use for polling connections
  # @section -- Agent values
  pollingProxy:
    host: ""
    port: 80
    username: ""
    password: ""

  # -- The repository, pullPolicy, tag & tagSuffix to use for the agent image
  # @section -- Agent values
  image:
    repository: octopusdeploy/kubernetes-agent-tentacle
    pullPolicy: IfNotPresent
    tag: "8.2.2165"
    tagSuffix: ""
   
  serviceAccount:
    # -- The name of the service account for the agent pod
    # @section -- Agent values
    # @default -- Generates a name based on `targetName`
    name: ""
    # -- Annotations to add to the autogenerated service account
    # @section -- Agent values
    annotations: {}
  
  # -- Additional metadata to add to the agent pod & container
  # @section -- Agent values
  metadata:
    annotations: {}
    labels: {}

  # -- The resource limits and requests assigned to the agent container
  # @section -- Agent values
  resources: 
    requests:
      memory: "150Mi"
      cpu: "100m"

  # -- The tolerations to apply to the agent pod
  # @section -- Agent values
  tolerations: []

  # -- The affinities to apply to the agent pod
  # @section -- Agent values
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - arm64
                - amd64
  
  # -- The security context to apply to the agent pod. runAsGroup and fsGroup should be blank or set to `0`
  # @section -- Agent values
  securityContext: {}

  debug:
    # -- Disables automatic pod cleanup
    # @section -- Agent values
    disableAutoPodCleanup: false

# @section -- Script pod values
scriptPods:
  # -- If true, the script pods will be created with a disruption budget to prevent them from being evicted
  # @section -- Script pod values
  disruptionBudgetEnabled: true

  # -- The resource limits and requests assigned to script pod containers
  # @section -- Script pod values
  resources: 
    requests:
      memory: "100Mi"
      cpu: "25m"

  serviceAccount:
    # -- The name of the service account used for executing script pods
    # @section -- Script pod values
    name: ""
    # -- Annotations to add to the service account
    # @section -- Script pod values
    annotations: {}

    # -- Specifies that the pod service account should be constrained to target namespaces
    # @section -- Script pod values
    # @default -- Uses a ClusterRoleBinding to allow the service account to run in any namespace
    targetNamespaces: []

    # -- if defined, overrides the default ClusterRole rules
    # @section -- Script pod values
    # @default -- `[{"apiGroups":["*"],"resources":["*"],"verbs":["*"]},{"nonResourceURLs":["*"],"verbs":["*"]}]`
    clusterRole:
      rules: []
  
  # -- The tolerations to apply to script pods
  # @section -- Script pod values
  tolerations: []

  # -- The affinities to apply to script pods
  # @section -- Script pod values
  affinity: 
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - arm64
                - amd64
  
  # -- The security context to apply to the script pods
  # @section -- Script pod values
  securityContext: {}

  # -- The repository, pullPolicy & tag to use for the script pod image. If left blank, will use the `octopusdeploy/kubernetes-agent-tools-base` image.
  # @section -- Script pod values
  image:
    repository: ""
    pullPolicy: ""
    tag: ""

  logging:  
    # -- Disables script pod events being written to Octopus Server task log
    # @section -- Script pod values
    disablePodEventsInTaskLog: false

# @section -- Persistence
persistence:
  
  # -- if provided, will disable the default persistence configuration and create a PVC with the provided storage class
  # @section -- Persistence
  storageClassName: ""

  # -- The size of the volume to create
  # @section -- Persistence
  size: 10Gi

  nfs:
    # -- The repository, pullPolicy & tag to use for the NFS server
    # @section -- Persistence
    image:
      repository: octopusdeploy/nfs-server
      pullPolicy: IfNotPresent
      tag: "1.0.1"
    
    # -- Additional metadata to add to the NFS pod & container
    # @section -- Persistence
    metadata:
      annotations: {}
      labels: {}

    # -- The tolerations to apply to the NFS pod
    # @section -- Persistence
    tolerations: []

    # -- The affinities to apply to the NFS pod
    # @section -- Persistence
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                  - arm64
                  - amd64

    watchdog:
      # -- If enabled, the NFS watchdog will monitor NFS availability and restart Tentacle and Script Pods if the NFS server is unresponsive
      # @section -- Persistence
      enabled: true
      # -- The frequency in seconds to check the NFS server
      # @section -- Persistence
      # @default 5
      loop_seconds: ""
      # -- The initial backoff time in seconds to retry failed NFS checks
      # @section -- Persistence
      # @default 0.5
      initial_backoff_seconds: ""
      # -- The total time to retry failed NFS checks before giving up and deleting the pod
      # @section -- Persistence
      # @default 10
      timeout_seconds: ""
      # -- The repository, pullPolicy & tag to use for the NFS watchdog
      # @section -- Persistence
      image:
        repository: octopusdeploy/kubernetes-agent-nfs-watchdog
        pullPolicy: IfNotPresent
        tag: "0.2.0"

# Used for integration testing to avoid registering with a real Octopus Server
# @ignored
testing:
  tentacle:
    configMap:
      data: {}
