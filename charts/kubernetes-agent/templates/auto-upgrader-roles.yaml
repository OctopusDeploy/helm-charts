{{- if .Values.scriptPods.serviceAccount.useNamespacedRoles }}
{{- $autoUpgraderSelfRoleName := include "kubernetes-agent.autoUpgraderSelfRoleName" . -}}
{{- $autoUpgraderTargetRoleName := include "kubernetes-agent.autoUpgraderTargetRoleName" . -}}

# Role for managing the agent in its own namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $autoUpgraderSelfRoleName }}
  namespace: {{ .Release.Namespace | quote }}
rules:
{{- if .Values.autoUpgrader.selfNamespaceRoleRules }}
{{ .Values.autoUpgrader.selfNamespaceRoleRules | toYaml | nindent 2 }}
{{- else }}
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
{{- end }}

{{- if .Values.scriptPods.serviceAccount.targetNamespaces }}
# Roles for managing script pod roles/rolebindings in target namespaces
{{- range $targetNamespace := $.Values.scriptPods.serviceAccount.targetNamespaces }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $autoUpgraderTargetRoleName }}
  namespace: {{ $targetNamespace | quote }}
rules:
{{- if $.Values.autoUpgrader.targetNamespaceRoleRules }}
{{ $.Values.autoUpgrader.targetNamespaceRoleRules | toYaml | nindent 2 }}
{{- else }}
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles"]
  {{/* escalate verb allows us to create roles/rolebindings in this namespace with correct permissions */}}
  verbs: ["escalate"]
{{- end }}
{{- end }}
{{- end }}
{{- end }}