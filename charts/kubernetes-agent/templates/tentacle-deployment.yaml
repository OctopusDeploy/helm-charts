apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{printf "%s-tentacle" (include "kubernetes-agent.name" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "kubernetes-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kubernetes-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.agent.metadata.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubernetes-agent.labels" . | nindent 8 }}
	      {{- with .Values.agent.metadata.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubernetes-agent.serviceAccountName" . }}
      containers:
        - name: {{printf "%s-tentacle" (include "kubernetes-agent.name" .) }}
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          startupProbe:
            exec:
              command:
                - cat
                - /etc/octopus/initialized
            initialDelaySeconds: 2
            periodSeconds: 2
          env:
            - name: "ACCEPT_EULA"
              value: {{ .Values.agent.acceptEula | quote }}
            - name: "TargetName"
              value: {{ .Values.agent.targetName | quote }}
            - name: "ServerCommsAddresses"
              value: {{ join "," .Values.agent.serverCommsAddresses | quote }}
            - name: "ServerCommsAddress"
              value: {{ .Values.agent.serverCommsAddress | quote }}
            - name: "ServerUrl"
              value: {{ .Values.agent.serverUrl | quote }}
            - name: "Space"
              value: {{ .Values.agent.space | quote }}
            - name: "TargetEnvironment"
              value: {{ join "," .Values.agent.targetEnvironments | quote }}
            - name: "TargetRole"
              value: {{ join "," .Values.agent.targetRoles | quote }}
            - name: "TargetTenant"
              value: {{ join "," .Values.agent.targetTenants | quote }}
            - name: "TargetTenantTag"
              value: {{ join "," .Values.agent.targetTenantTags | quote }}
            - name: "TargetTenantedDeploymentParticipation"
              value: {{ .Values.agent.targetTenantedDeploymentParticipation | quote }}
            {{- with .Values.agent.machinePolicyName }}
            - name: "MachinePolicy"
              value: {{ . | quote }}
            {{- end }}
            - name: "DefaultNamespace"
              value: {{ .Values.agent.defaultNamespace | quote }}
            - name: "OCTOPUS__K8STENTACLE__NAMESPACE"
              value: {{ .Release.Namespace | quote }}
            - name: "OCTOPUS__K8STENTACLE__PODSERVICEACCOUNTNAME"
              value: {{ include "kubernetes-agent.scriptPodServiceAccountName" . | quote }}
            - name: "OCTOPUS__K8STENTACLE__PODVOLUMECLAIMNAME"
              value: {{ (include "kubernetes-agent.pvcName" .)  | quote}}
            - name: "OCTOPUS__K8STENTACLE__HELMRELEASENAME"
              value: {{ .Release.Name | quote}}
            - name: "OCTOPUS__K8STENTACLE__HELMCHARTVERSION"
              value: {{ .Chart.Version | quote}}
            - name: "OCTOPUS__K8STENTACLE__DISABLEAUTOPODCLEANUP"
              value: {{ .Values.agent.debug.disableAutoPodCleanup | quote }}
            {{- if and .Values.persistence.nfs.watchdog.enabled (not .Values.persistence.storageClassName) }}
            - name: "OCTOPUS__K8STENTACLE__NFSWATCHDOGIMAGE"
              value: "{{ .Values.persistence.nfs.watchdog.image.repository }}:{{ .Values.persistence.nfs.watchdog.image.tag }}"
            {{- end }}
            - name: "OCTOPUS__TENTACLE__LOGLEVEL"
              value: {{ .Values.agent.logLevel }}
            - name: "TentacleHome"
              value: "/octopus"
            - name: "TentacleApplications"
              value: "/octopus/Applications"
            - name: "TentaclePollingConnectionCount"
              value: {{ .Values.agent.pollingConnectionCount | quote }}
            - name: "OCTOPUS__K8STENTACLE__ENABLEMETRICSCAPTURE"
              value: {{ .Values.agent.enableMetricsCapture| quote }}
            {{- if .Values.agent.serverApiKey }}
            - name: "ServerApiKey"
              valueFrom:
                secretKeyRef: 
                  name: {{ include "kubernetes-agent.secrets.serverAuth" . }}
                  key: api-key
            {{- end }}
            {{- if .Values.agent.bearerToken }}
            - name: "BearerToken"
              valueFrom:
                secretKeyRef: 
                  name: {{ include "kubernetes-agent.secrets.serverAuth" . }}
                  key: bearer-token
            {{- end }}
            {{- if .Values.agent.certificate }}
            - name: "TentacleCertificateBase64"
              valueFrom:
                secretKeyRef: 
                  name: {{ include "kubernetes-agent.secrets.certificate" . }}
                  key: certificate
            {{- end}}
            {{- if .Values.agent.serverSubscriptionId }}
            - name: "ServerSubscriptionId"
              value: {{ .Values.agent.serverSubscriptionId | quote }}
            {{- end}}
            - name: "OCTOPUS__K8STENTACLE__PERSISTENTVOLUMESIZE"
              value: {{ .Values.persistence.size | quote }}
          {{- with .Values.agent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end}}
          volumeMounts:
            - mountPath: /octopus
              name: tentacle-home
        {{- if and .Values.persistence.nfs.watchdog.enabled (not .Values.persistence.storageClassName) }}
        - name: nfs-watchdog
          image: "{{ .Values.persistence.nfs.watchdog.image.repository }}:{{ .Values.persistence.nfs.watchdog.image.tag }}"
          imagePullPolicy: {{ .Values.persistence.nfs.watchdog.image.pullPolicy }}
          env:
            - name: "watchdog_directory"
              value: "/octopus"
            {{ if .Values.persistence.nfs.watchdog.loop_seconds }}
            - name: "watchdog_loop_seconds"
              value: "{{ .Values.persistence.nfs.watchdog.loop_seconds }}"
            {{ end }}
            {{ if .Values.persistence.nfs.watchdog.initial_backoff_seconds }}
            - name: "watchdog_initial_backoff_seconds"
              value: "{{ .Values.persistence.nfs.watchdog.initial_backoff_seconds }}"
            {{ end }}
            {{ if .Values.persistence.nfs.watchdog.timeout_seconds }}
            - name: "watchdog_timeout_seconds"
              value: "{{ .Values.persistence.nfs.watchdog.timeout_seconds }}"
            {{ end }}
          volumeMounts:
            - mountPath: /octopus
              name: tentacle-home
        {{- end}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - arm64
                    - amd64
      volumes:
        - name: tentacle-home
          persistentVolumeClaim:
            claimName: {{ include "kubernetes-agent.pvcName" .}}
