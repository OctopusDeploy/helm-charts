{{- if .Values.storage.useNFSContainer }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-nfs" (include "kubernetes-agent.name" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-nfs" (include "kubernetes-agent.name" .) }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ printf "%s-nfs" (include "kubernetes-agent.name" .) }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ printf "%s-nfs" (include "kubernetes-agent.name" .) }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ printf "%s-nfs" (include "kubernetes-agent.name" .) }}
          image: "itsthenetwork/nfs-server-alpine:latest{{ .Values.development.nfs.useArmContainer | ternary "-arm" "" }}"
          securityContext:
            privileged: true
          env:
          - name: "SHARED_DIRECTORY"
            value: "/octopus"
          - name: "SYNC"
            value: "true"   
          ports:
          - containerPort: 2049
          volumeMounts:
          - mountPath: /octopus
            name: octopus-volume
      volumes:
        - name: octopus-volume
          emptyDir:
            sizeLimit: 1Gi

{{- end -}}