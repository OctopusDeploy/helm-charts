{{- if .Values.storage.nfs.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nfs.name" .}}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ include "nfs.name" .}}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ include "nfs.name" .}}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "nfs.name" .}}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ include "nfs.name" .}}
          image: "octopusdeploy/nfs-server:latest"
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - >-
                    echo "Prestop: Delaying shutdown until NFS connections are
                    closed" > /proc/1/fd/1;  counter=0;  nfsConnection=$(netstat
                    | grep :nfs); while [[ $nfsConnection ]]; do 
                    counter=$((++counter)); nfsConnection=$(netstat | grep
                    :nfs);  echo "Waiting for NFS connections to close -
                    ${counter}s" > /proc/1/fd/1; sleep 1;  done;  echo "Prestop:
                    All NFS connections are closed" > /proc/1/fd/1;
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
          env:
          - name: "SHARED_DIRECTORY"
            value: "/octopus"
          - name: "SYNC"
            value: "true"   
          ports:
          - containerPort: 2049
          volumeMounts:
          - mountPath: /octopus
            name: octopus-volume
      terminationGracePeriodSeconds: 120
      volumes:
        - name: octopus-volume
          emptyDir:
            sizeLimit: {{ .Values.storage.nfs.size}}
      nodeSelector:
        kubernetes.io/os: "linux"

{{- end -}}